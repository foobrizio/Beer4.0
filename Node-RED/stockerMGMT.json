[{"id":"1775ac36.40b604","type":"tab","label":"Stocker MGMT","disabled":false,"info":""},{"id":"1940a1e5.917e9e","type":"mqtt in","z":"1775ac36.40b604","name":"Data from Stocker","topic":"data/st/+/+/+/5700","qos":"0","datatype":"json","broker":"b750acbb.e73dc8","nl":false,"rap":false,"rh":"2","x":130,"y":360,"wires":[["afd20d09.d4a568"]]},{"id":"afd20d09.d4a568","type":"function","z":"1775ac36.40b604","name":"MUX","func":"const topic = msg.topic;\nlet array = topic.split('/');\n\nlet device = array[2];\nlet sensor = array[3];\nlet object = array[4];\n\nlet formattedValue = Math.round(msg.payload.v*100)/100;\nlet tempVal=null, humVal=null, lightVal=null, fireVal= null;\n\nlet time = msg.payload.time;\n\nswitch(sensor){\n    case \"503\": \n        fireVal = {\n            payload: {\n                //time: time,\n                value: formattedValue,\n                dev: device,\n                objInstance: object\n            }\n        }; break;\n    case \"3301\": \n        lightVal = {\n            payload: {\n                //time: time,\n                value: formattedValue,\n                dev: device,\n                objInstance: object\n            }\n        };break;\n    case \"3303\":\n        tempVal = {\n            payload: {\n                //time: time,\n                value: formattedValue,\n                dev: device,\n                objInstance: object\n            }\n        };break;\n    case \"3304\": \n        humVal = {\n            payload: {\n                //time: time,\n                value: formattedValue,\n                dev: device,\n                objInstance: object\n            }\n        };break;\n    default: break;\n}\n\nreturn [tempVal, humVal, lightVal, fireVal];\n","outputs":4,"noerr":0,"initialize":"","finalize":"","libs":[],"x":330,"y":360,"wires":[["a79e6d5f.27e0f8"],["37e6d11.9ddf62e"],["bb2e63fd.8fc1a8"],["713ba244.fec6f4"]],"outputLabels":["Temperature","Humidity","Light","Fire"],"icon":"node-red/switch.svg"},{"id":"a79e6d5f.27e0f8","type":"function","z":"1775ac36.40b604","name":"Handle Temperature","func":"let value=msg.payload.value;\nlet dev = msg.payload.dev;\nlet obj = msg.payload.objInstance;\n\nif(value==-127 || isNaN(value)) return null;\n\n\n//Qui recuperiamo il precedente valore d'allarme\nconst tempAlarm=\"stocker_\"+dev+\"_temp_\"+obj;\nlet alarm = flow.get(tempAlarm);\n\n//Questa è la soglia definita nel Recipy MGMT\nlet maxTemp=global.get(\"stocker_max_temp\");\nlet minTemp=global.get(\"stocker_min_temp\");\n/* se non c'è alcuna customizzazione sulla soglia di\n     * umidità, allora impostiamo il valore di default.\n     */\nif(maxTemp === undefined){\n    maxTemp = 26;\n}\nif(minTemp === undefined){\n    minTemp = 4;\n}\n/* Questo if viene eseguito solo la prima volta, per\n * inizializzare la variable */\nif(alarm === undefined){\n    alarm = false;\n    flow.set(tempAlarm, false);\n}\n\nlet mqttMessage = {\n    topic: \"cmd/st/\"+dev+\"/3311/0/5850\",\n    payload: \"\"\n};\n\nif(((value < maxTemp) && (value > minTemp)) && alarm){\n    // temperatura a posto, ma c'è un allarme attivo\n    mqttMessage.payload = {\"v\":\"OFF\"};\n    flow.set(tempAlarm, false);\n}\nelse if((value >= maxTemp) && !alarm){\n    // alta temperatura rilevata, ma nessun allarme attivo\n    mqttMessage.payload = {\"v\":\"ON\"};\n    flow.set(tempAlarm, true);\n}\nelse if((value <= minTemp) && !alarm){\n    // bassa temperatura rilevata, ma nessun allarme attivo\n    mqttMessage.payload = {\"v\":\"ON\"};\n    flow.set(tempAlarm, true);\n}\nelse{\n    // In questo caso non dobbiamo fare nula\n    mqttMessage = null;\n}\n\nreturn [msg, mqttMessage];","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":640,"y":100,"wires":[["f725e6b1.5f9c38","b286e8d3.1f76c8"],["e802b4e6.19bc08"]]},{"id":"37e6d11.9ddf62e","type":"function","z":"1775ac36.40b604","name":"Handle Humidity","func":"let value=msg.payload.value;\nlet dev = msg.payload.dev;\nlet obj = msg.payload.objInstance;\n\nif(value==-127 || isNaN(value)) return null;\n\n//Qui recuperiamo il precedente valore d'allarme\nconst humidityAlarm=\"stocker_\"+dev+\"_humidity_\"+obj;\nlet alarm = flow.get(humidityAlarm);\n\n//Questa è la soglia definita nel Recipy MGMT\nlet maxHumidity=global.get(\"stocker_max_humidity\");\nif(maxHumidity === undefined){\n    /* se non c'è alcuna customizzazione sulla soglia di\n     * umidità, allora impostiamo il valore di default.\n     */\n    maxHumidity = 50;\n}\n/* Questo if viene eseguito solo la prima volta, per\n * inizializzare la variable */\nif(alarm === undefined){\n    alarm = false;\n    flow.set(humidityAlarm, false);\n}\nlet mqttMessage = {\n    topic: \"cmd/st/\"+dev+\"/3311/1/5850\",\n    payload: \"\"\n};\n\nif((value < maxHumidity) && alarm){\n    // umidità posto, ma c'è un allarme attivo\n    mqttMessage.payload = {\"v\":\"OFF\"};\n    flow.set(humidityAlarm, false);\n}\nelse if((value >= maxHumidity) && !alarm){\n    // alta umidità rilevata, ma nessun allarme attivo\n    mqttMessage.payload = {\"v\":\"ON\"};\n    flow.set(humidityAlarm, true);\n}\nelse{\n    // In questo caso non dobbiamo fare nula\n    mqttMessage = null;\n}\n\nreturn [msg, mqttMessage];","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":630,"y":260,"wires":[["8d54f65.757e108","8ad7987a.900bf8"],["504f31ba.02cf78"]]},{"id":"bb2e63fd.8fc1a8","type":"function","z":"1775ac36.40b604","name":"Handle Light","func":"let value=msg.payload.value;\nlet dev = msg.payload.dev;\nlet obj = msg.payload.objInstance;\nlet timestamp = msg.payload.timestamp;\n\nif(value==100) return;\n\n//Qui recuperiamo il precedente valore d'allarme\nconst lightAlarm=\"stocker_\"+dev+\"_light_\"+obj;\nlet alarm = flow.get(lightAlarm);\n\n//Questa è la soglia definita nel Recipy MGMT\nlet maxLight=global.get(\"stocker_max_light\");\nif(maxLight === undefined){\n    /* se non c'è alcuna customizzazione sulla soglia di luce\n     * allora impostiamo il valore di default.\n     */\n    maxLight = 50;\n}\n/* Questo if viene eseguito solo la prima volta, per\n * inizializzare la variable */\nif(alarm === undefined){\n    alarm = false;\n    flow.set(lightAlarm, false);\n}\nlet mqttMessage = {\n    topic: \"cmd/st/\"+dev+\"/3311/2/5850\",\n    payload: \"\"\n};\n\nif((value < maxLight) && alarm){\n    // la luce è a posto, ma c'è un allarme attivo\n    mqttMessage.payload = {\"v\":\"OFF\"};\n    flow.set(lightAlarm, false);\n}\nelse if((value >= maxLight)&& !alarm){\n    // luce intensa rilevata, ma nessun allarme attivo\n    mqttMessage.payload = {\"v\":\"ON\"};\n    flow.set(lightAlarm, true);\n}\nelse{\n    // In questo caso non dobbiamo fare nula\n    mqttMessage = null;\n}\n\nreturn [msg, mqttMessage];","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":610,"y":460,"wires":[["4d0a3fa6.f21b4","d40a5fda.a9183"],["b46d8d59.e73e9"]]},{"id":"713ba244.fec6f4","type":"function","z":"1775ac36.40b604","name":"Handle Fire","func":"let result=true;\nlet dev = msg.payload.dev;\nlet obj = msg.payload.objInstance;\nlet fireAlarm=\"stocker_\"+dev+\"_fire_\"+obj;\nlet alarm = flow.get(fireAlarm);\n\n\n/* Questo if viene eseguito solo la prima volta, per\n * inizializzare la variable */\nif(alarm === undefined){\n    alarm = false;\n    flow.set(fireAlarm, false);\n}\n\nif(msg.payload.value == 1){\n    // non è stata rilevata alcuna fiamma.\n    result= false;\n    //flow.set(fireVariable, false);\n}\n\nmsg.payload = {\n    //time : msg.payload.time,\n    value: result,\n    dev: dev,\n    objInstance: obj\n};\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":590,"y":640,"wires":[["9dc94bd3.e6346","72731a5a.fef81c","ea485564.5163f"]]},{"id":"9dc94bd3.e6346","type":"function","z":"1775ac36.40b604","name":"Fire Alarm Control","func":"let dev=msg.payload.dev;\nlet obj=msg.payload.objInstance;\n\nconst fireVariable= \"stocker_\"+dev+\"_fire_\"+obj;\nlet alarm = flow.get(fireVariable);\n\n// Qui creiamo il topic\nmsg.topic=\"cmd/st/\"+dev+\"/3311/3/5850\";\n\n\n/* Ora andiamo a verificare se l'allarme va acceso o spento,\n * in base al risultato del sensore e alla variable flow salvata\n * in precedenza. Se entrambi i valori sono negativi, allora l'\n * allarme è spento e rimane spento, quindi non facciamo nulla.\n * Se entrambi i valori sono positivi, allora l'allarme è attivo\n * e rimane attivo, quindi non facciamo nulla. Se i due valori\n * sono contrastanti, allora l'allarme va acceso oppure spento\n */\nlet result=msg.payload.value;\n\nif(result && !alarm){\n    // Fuoco rilevato, ma allarme spento\n    flow.set(fireVariable, true);\n    msg.payload={\"v\":\"ON\"};\n}\nelse if(!result && alarm){\n    // Fuoco non rilevato, ma allarme attivo\n    flow.set(fireVariable, false);\n    msg.payload={\"v\":\"OFF\"};\n}\nelse{\n    //Altrimenti non mandiamo nulla.\n    msg = null;\n}\n\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":810,"y":680,"wires":[["1988b2a8.be70ad"]]},{"id":"1988b2a8.be70ad","type":"mqtt out","z":"1775ac36.40b604","name":"Send Fire Alarm","topic":"","qos":"1","retain":"true","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"b750acbb.e73dc8","x":1120,"y":680,"wires":[]},{"id":"72731a5a.fef81c","type":"change","z":"1775ac36.40b604","name":"OpenHab format","rules":[{"t":"change","p":"payload.result","pt":"msg","from":"true","fromt":"bool","to":"FIRE ALARM!!!","tot":"str"},{"t":"change","p":"payload.result","pt":"msg","from":"false","fromt":"bool","to":"no fire","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":810,"y":620,"wires":[["59cf2e2a.19d5d"]]},{"id":"b46d8d59.e73e9","type":"mqtt out","z":"1775ac36.40b604","name":"Send Light Alarm","topic":"","qos":"1","retain":"true","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"b750acbb.e73dc8","x":950,"y":500,"wires":[]},{"id":"504f31ba.02cf78","type":"mqtt out","z":"1775ac36.40b604","name":"Send Humidity Alarm","topic":"","qos":"1","retain":"true","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"b750acbb.e73dc8","x":940,"y":320,"wires":[]},{"id":"e802b4e6.19bc08","type":"mqtt out","z":"1775ac36.40b604","name":"Send Temperature Alarm","topic":"","qos":"1","retain":"true","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"b750acbb.e73dc8","x":1010,"y":140,"wires":[]},{"id":"f725e6b1.5f9c38","type":"change","z":"1775ac36.40b604","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.value","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":835,"y":80,"wires":[["926d4e80.1a4cf8"]],"l":false},{"id":"59cf2e2a.19d5d","type":"change","z":"1775ac36.40b604","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.value","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":995,"y":620,"wires":[["2e1f763a.a56d0a"]],"l":false},{"id":"8d54f65.757e108","type":"change","z":"1775ac36.40b604","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.value","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":815,"y":260,"wires":[["19ce6b00.1cdc8d"]],"l":false},{"id":"4d0a3fa6.f21b4","type":"change","z":"1775ac36.40b604","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.value","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":795,"y":440,"wires":[["c7d4ce19.c74dc8"]],"l":false},{"id":"926d4e80.1a4cf8","type":"openhab2-out2","z":"1775ac36.40b604","name":"Temperature Stocker","controller":"dfa31b.5159ece8","itemname":"temperaturestocker","topic":"ItemCommand","payload":"","onlywhenchanged":false,"x":1040,"y":80,"wires":[]},{"id":"19ce6b00.1cdc8d","type":"openhab2-out2","z":"1775ac36.40b604","name":"Humidity Stocker","controller":"dfa31b.5159ece8","itemname":"humidityStocker","topic":"ItemCommand","payload":"","onlywhenchanged":false,"x":950,"y":260,"wires":[]},{"id":"c7d4ce19.c74dc8","type":"openhab2-out2","z":"1775ac36.40b604","name":"Light Stocker","controller":"dfa31b.5159ece8","itemname":"lightSensor","topic":"ItemCommand","payload":"","onlywhenchanged":false,"x":940,"y":440,"wires":[]},{"id":"2e1f763a.a56d0a","type":"openhab2-out2","z":"1775ac36.40b604","name":"Fire Alarm Stocker","controller":"dfa31b.5159ece8","itemname":"fireSensor","topic":"ItemCommand","payload":"","onlywhenchanged":false,"x":1210,"y":620,"wires":[]},{"id":"c7b33f64.e85578","type":"mqtt in","z":"1775ac36.40b604","name":"Response from Stocker","topic":"resp/st/#","qos":"1","datatype":"json","broker":"b750acbb.e73dc8","nl":false,"rap":false,"rh":"1","x":140,"y":940,"wires":[["e79446b5.dc21a8"]]},{"id":"e79446b5.dc21a8","type":"function","z":"1775ac36.40b604","name":"Alarm status Check","func":"let topic = msg.topic;\nlet array = topic.split('/');\n\nlet device = array[2];\nlet object = array[3];\nlet resource = array[5];\nlet result = null;\n\nif(object==\"3\") {\n    /* Stiamo ricevendo un responso di reboot da una delle due\n    schede */\n    if(resource==\"4\"){\n        let value = msg.payload.v;\n        if(value == \"Online\" ) {\n            let tempVariable = \"stocker_\"+device+\"_tempAlarm\";\n            let humVariable = \"stocker_\"+device+\"_humAlarm\"\n            let lightVariable = \"stocker_\"+device+\"_lightAlarm\"\n            let fireVariable = \"stocker_\"+device+\"_fireAlarm\"\n            flow.set(tempVariable, false);\n            flow.set(humVariable, false);\n            flow.set(lightVariable, false);\n            flow.set(fireVariable, false);\n            result = {\n                payload : {\n                    devInstance: device,\n                    value: \"ON\"\n                }\n            };\n        }\n        else if (value==\"Offline\"){\n            result = {\n                payload : {\n                    devInstance: device,\n                    value: \"OFF\"\n                }\n            }\n        }\n    }\n} \nreturn result;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":410,"y":940,"wires":[["c3ec836a.6e61a8","b52545c2.413d1","5d7009ac.952f1","279250a0.12424"]]},{"id":"c3ec836a.6e61a8","type":"change","z":"1775ac36.40b604","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.value","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":690,"y":940,"wires":[["3cc26aba.e3e4ce","724cc795.dd0c5","41986db9.9199cc","82aa51b6.75d678"]]},{"id":"3cc26aba.e3e4ce","type":"openhab2-out2","z":"1775ac36.40b604","name":"Temperature Observe Stocker","controller":"dfa31b.5159ece8","itemname":"TemperatureObserve","topic":"ItemCommand","payload":"","onlywhenchanged":false,"x":1010,"y":820,"wires":[]},{"id":"724cc795.dd0c5","type":"openhab2-out2","z":"1775ac36.40b604","name":"Humidity Observe Stocker","controller":"dfa31b.5159ece8","itemname":"HumidityObserve","topic":"ItemCommand","payload":"","onlywhenchanged":false,"x":1000,"y":880,"wires":[]},{"id":"41986db9.9199cc","type":"openhab2-out2","z":"1775ac36.40b604","name":"Light Observe Stocker","controller":"dfa31b.5159ece8","itemname":"LightObserve","topic":"ItemCommand","payload":"","onlywhenchanged":false,"x":980,"y":940,"wires":[]},{"id":"82aa51b6.75d678","type":"openhab2-out2","z":"1775ac36.40b604","name":"Fire Observe Stocker","controller":"dfa31b.5159ece8","itemname":"FireObserve","topic":"ItemCommand","payload":"","onlywhenchanged":false,"x":980,"y":1000,"wires":[]},{"id":"b52545c2.413d1","type":"function","z":"1775ac36.40b604","name":"Handle Leds Stocker ","func":"let green = null;\nlet red = null;\nlet value = msg.payload.value;\n\nif(value == \"ON\") {\n    green = {\n        payload : 1\n    }\n    red = {\n        payload : 0\n    }\n    \n}\n\nelse if(value == \"OFF\") {\n     green = {\n        payload : 0\n    }\n    red = {\n        payload : 1\n    }\n}\n\nelse {\n     green = {\n        payload : 0\n    }\n    red = {\n        payload : 0\n    }\n}\n\nreturn [green, red];","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":720,"y":1080,"wires":[["b449f4cb.53ac"],["2e9be08.f95cc2"]]},{"id":"b449f4cb.53ac","type":"rpi-gpio out","z":"1775ac36.40b604","name":"Green Led Stocker ","pin":"37","set":true,"level":"0","freq":"","out":"out","x":1030,"y":1060,"wires":[]},{"id":"2e9be08.f95cc2","type":"rpi-gpio out","z":"1775ac36.40b604","name":"Red Led Stocker","pin":"38","set":true,"level":"0","freq":"","out":"out","x":1030,"y":1120,"wires":[]},{"id":"5d7009ac.952f1","type":"change","z":"1775ac36.40b604","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.value","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":615,"y":1200,"wires":[["a8a59dd0.c14cc8"]],"l":false},{"id":"a8a59dd0.c14cc8","type":"change","z":"1775ac36.40b604","name":"","rules":[{"t":"change","p":"payload","pt":"msg","from":"ON","fromt":"str","to":"ONLINE","tot":"str"},{"t":"change","p":"payload","pt":"msg","from":"OFF","fromt":"str","to":"OFFLINE","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":735,"y":1200,"wires":[["bb84a214.42122"]],"l":false},{"id":"bb84a214.42122","type":"openhab2-out2","z":"1775ac36.40b604","name":"State Stocker Label","controller":"dfa31b.5159ece8","itemname":"stateLabelStocker","topic":"ItemCommand","payload":"","onlywhenchanged":false,"x":970,"y":1200,"wires":[]},{"id":"74dcb5d1.6359b4","type":"debug","z":"1775ac36.40b604","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":420,"y":880,"wires":[]},{"id":"279250a0.12424","type":"debug","z":"1775ac36.40b604","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":690,"y":880,"wires":[]},{"id":"5f90f4da.e3d30c","type":"influxdb out","z":"1775ac36.40b604","influxdb":"bcebe6c8.34832","name":"Store in DB","measurement":"stockerFire","precision":"s","retentionPolicy":"","database":"database","precisionV18FluxV20":"ms","retentionPolicyV18Flux":"","org":"organisation","bucket":"bucket","x":950,"y":560,"wires":[]},{"id":"d40a5fda.a9183","type":"influxdb out","z":"1775ac36.40b604","influxdb":"bcebe6c8.34832","name":"Store in DB","measurement":"stockerLight","precision":"s","retentionPolicy":"","database":"database","precisionV18FluxV20":"ms","retentionPolicyV18Flux":"","org":"organisation","bucket":"bucket","x":890,"y":380,"wires":[]},{"id":"8ad7987a.900bf8","type":"influxdb out","z":"1775ac36.40b604","influxdb":"bcebe6c8.34832","name":"Store in DB","measurement":"stockerHumidity","precision":"s","retentionPolicy":"","database":"database","precisionV18FluxV20":"ms","retentionPolicyV18Flux":"","org":"organisation","bucket":"bucket","x":870,"y":200,"wires":[]},{"id":"b286e8d3.1f76c8","type":"influxdb out","z":"1775ac36.40b604","influxdb":"bcebe6c8.34832","name":"Store in DB","measurement":"stockerTemperature","precision":"s","retentionPolicy":"","database":"database","precisionV18FluxV20":"ms","retentionPolicyV18Flux":"","org":"organisation","bucket":"bucket","x":910,"y":20,"wires":[]},{"id":"ea485564.5163f","type":"change","z":"1775ac36.40b604","name":"","rules":[{"t":"change","p":"payload.value","pt":"msg","from":"true","fromt":"bool","to":"1","tot":"num"},{"t":"change","p":"payload.value","pt":"msg","from":"false","fromt":"bool","to":"0","tot":"num"}],"action":"","property":"","from":"","to":"","reg":false,"x":755,"y":560,"wires":[["5f90f4da.e3d30c"]],"l":false},{"id":"b750acbb.e73dc8","type":"mqtt-broker","name":"Broker","broker":"broker.hivemq.com","port":"1883","tls":"","clientid":"","usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthRetain":"false","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closeRetain":"false","closePayload":"","closeMsg":{},"willTopic":"brm/3/0/11","willQos":"1","willRetain":"true","willPayload":"2","willMsg":{},"sessionExpiry":""},{"id":"dfa31b.5159ece8","type":"openhab2-controller2","name":"Openhab","protocol":"http","host":"192.168.1.165","port":"8080","path":"","username":"","password":"","ohversion":"v3","token":""},{"id":"bcebe6c8.34832","type":"influxdb","hostname":"127.0.0.1","port":"8086","protocol":"http","database":"BrewIoT","name":"BrewIoT","usetls":false,"tls":"","influxdbVersion":"1.x","url":"http://localhost:8086","rejectUnauthorized":true}]
