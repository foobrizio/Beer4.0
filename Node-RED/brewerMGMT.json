[{"id":"687dc4d5.f5f3bc","type":"subflow","name":"Restore from DB","info":"","category":"","in":[{"x":200,"y":420,"wires":[{"id":"e270b408.3be4e8"}]}],"out":[],"env":[],"meta":{},"color":"#DDAA99"},{"id":"dd318e22.73939","type":"function","z":"687dc4d5.f5f3bc","name":"Create query","func":"let device = msg.payload;\n\nlet minTemp = global.get(\"brewer_\"+device+\"_minTemp\");\nlet maxTemp = global.get(\"brewer_\"+device+\"_maxTemp\");\n\nif(minTemp == undefined || maxTemp == undefined) {\n    let query = \"SELECT * FROM activeRecipe\" + device;\n    msg.query = query;\n}\nelse {\n    msg = null;\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":590,"y":420,"wires":[["6a998b73.894ae4"]]},{"id":"6a998b73.894ae4","type":"influxdb in","z":"687dc4d5.f5f3bc","influxdb":"bcebe6c8.34832","name":"","query":"","rawOutput":false,"precision":"","retentionPolicy":"","org":"organisation","x":780,"y":420,"wires":[["c5144862.702d5"]]},{"id":"e270b408.3be4e8","type":"function","z":"687dc4d5.f5f3bc","name":"Convert dev number","func":"let device = msg.payload.devInstance;\n\nif(device == \"0\" ) {\n    msg.payload = 1;\n}\n\nelse if (device == \"10\") {\n    msg.payload = 2;\n}\n\nelse {\n    msg = null;\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":380,"y":420,"wires":[["dd318e22.73939"]]},{"id":"c5144862.702d5","type":"function","z":"687dc4d5.f5f3bc","name":"Restore variables","func":"let array = msg.payload;\nif(array.length == 0 ) return;\nlet result = array[0];\nlet device = result.devInstance;\nlet minTemp = result.min;\nlet maxTemp = result.max;\n\nif(device == \"1\") {\n    device = \"0\";\n}\nelse if(device == \"2\") {\n    device = \"10\";\n}\n\nglobal.set(\"brewer_\"+device+\"_minTemp\", minTemp);\nglobal.set(\"brewer_\"+device+\"_maxTemp\", maxTemp);\n\nreturn;","outputs":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":990,"y":420,"wires":[]},{"id":"1963aa58.852a6e","type":"tab","label":"Brewer MGMT","disabled":false,"info":""},{"id":"cc3836fe.795fd8","type":"mqtt in","z":"1963aa58.852a6e","name":"Data from Brewer","topic":"data/br/+/+/+/5700","qos":"0","datatype":"json","broker":"b750acbb.e73dc8","nl":false,"rap":false,"rh":"0","x":100,"y":400,"wires":[["7249a26a.9f0b64"]]},{"id":"7249a26a.9f0b64","type":"function","z":"1963aa58.852a6e","name":"","func":"const topic = msg.topic;\nlet array = topic.split('/');\n\nlet device = array[2];\nlet sensor = array[3];\nlet object = array[4];\n\nif(msg.payload.v == -127 ) return;\n\nlet formattedValue = Math.round(msg.payload.v*100)/100;\n/* Valutare se togliere il sensorType dall'insieme di\n * valori che vengono inoltrati nei nodi successivi\n */\nlet value1 = {\n            payload: {\n                value: formattedValue,\n                devInstance : device,\n                sensorType  : sensor\n            }\n}\nlet value2 = {\n            payload: {\n                //time: msg.payload.tstamp,\n                value: formattedValue,\n                devInstance: device,\n                sensorType:  sensor,\n                objInstance: object\n            }\n};\n\nreturn [value1, value2];\n","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":255,"y":400,"wires":[["9c05eca6.48661","fd7af7d7.fb55","bf316091.3cde38"],["6863f0c2.a0cdf8"]],"outputLabels":["temperature","payload"],"icon":"node-red/switch.svg","l":false},{"id":"9c05eca6.48661","type":"function","z":"1963aa58.852a6e","name":"Temperature Thresholds check","func":"// Qui riprendiamo i valori dal nodo precedente.\nlet device = msg.payload.devInstance;\nlet sensor = msg.payload.sensorType;\nlet value = msg.payload.value;\n\n\n/* Qui andiamo a recuperare le soglie stabilite per il\n * nostro sensore\n */\nlet minValue = global.get(\"brewer_\"+device+\"_minTemp\");\nlet maxValue = global.get(\"brewer_\"+device+\"_maxTemp\");\n\nif(minValue === undefined){\n    //minValue = 16;\n    return null;\n}\nif(maxValue === undefined){\n    //maxValue = 26;\n    return null;\n}\n\nlet avg = (minValue + maxValue)/2;\n\n/* Recuperiamo i valori della cintura riscaldante e creiamo\n * il msg per il controllo della stessa. L'ID del WiFi relay\n * correlato alla scheda ESP è uguale all'ID della scheda \n * ESP + 1.\n */\nlet beltDevice = parseInt(device)+1;\nlet beltVariable = \"brewer_\"+beltDevice+\"_belt\";\nlet beltStatus = flow.get(beltVariable);\nif(beltStatus === undefined){\n    beltStatus = false;\n    flow.set(beltVariable, beltStatus);\n}\nlet beltControl={\n    topic: \"br/\"+beltDevice+\"/3306/0/cmnd/POWER\",\n    payload: \"\"\n};\n\n\n/* Qui invece gestiamo i valori del led d'allarme */\nlet ledVariable = \"brewer_\"+device+\"_tempAlarm\";\nlet ledStatus = global.get(ledVariable);\nif(ledStatus === undefined){\n    ledStatus = false;\n    global.set(ledVariable, ledStatus);\n}\nlet ledControl={\n    topic: \"cmd/br/\"+device+\"/3311/0/5850\",\n    payload: \"\"\n};\n\nif(value<minValue){\n    /* Abbiamo rilevato una temperatura che è minore di\n     * quella minima accettabile, quindi dobbiamo far partire\n     * la cintura riscaldante (a meno che non sia già partita)\n     */\n    if(!beltStatus){\n        beltControl.payload = \"ON\";\n    }\n    else{\n        // La cintura è già attiva.\n        beltControl = null;\n    }\n    if(!ledStatus){\n        ledControl.payload = {\n            v: \"ON\"\n        };\n        global.set(ledVariable,true);\n    }\n    else ledControl = null;\n    \n}\nelse if(value>maxValue){\n    /* La cisterna è troppo calda. Dobbiamo far \n     * partire l'allarme\n     */\n    beltControl = null;\n    if(!ledStatus){\n        // L'allarme non è attivo\n        ledControl.payload = {\n            v: \"ON\"\n        };\n        global.set(ledVariable,true);\n    }\n    else ledControl = null;\n}\nelse if(value>=minValue && value < maxValue){\n    /* Se siamo qui, la temperatura é a posto. */\n    if(value>=avg){\n        /* La temperatura ha superato la media di valori \n         * ammessi. Se c'era una cintura accesa in precedenza\n         * ora è il momento di spegnerla\n         */\n        if(beltStatus){\n            beltControl.payload = \"OFF\";\n        }\n        else beltControl = null;\n    }\n    else beltControl=null;\n    if(ledStatus){\n        /* Se c'era un allarme attivo, ora è il momento di\n           spegnerlo */\n        ledControl.payload = {\n            v: \"OFF\",\n        };\n        global.set(ledVariable,false)\n    }\n    else ledControl = null;\n}\n\nreturn [beltControl,ledControl];","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":530,"y":180,"wires":[["768c888a.0f0a6"],["81abdccc.ec9048"]],"outputLabels":["BELT_CONTROL","LED_CONTROL"]},{"id":"768c888a.0f0a6","type":"mqtt out","z":"1963aa58.852a6e","name":"Send to belt","topic":"","qos":"1","retain":"false","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"b750acbb.e73dc8","x":850,"y":160,"wires":[]},{"id":"7df6d183.a15e3","type":"mqtt in","z":"1963aa58.852a6e","name":"Response from Sonoff","topic":"br/+/3306/#","qos":"1","datatype":"auto","broker":"b750acbb.e73dc8","nl":false,"rap":false,"rh":"0","x":140,"y":1380,"wires":[["60272332.966d54"]]},{"id":"d060c561.9d294","type":"function","z":"1963aa58.852a6e","name":"Update belt status","func":"let device = msg.payload.device;\n\nlet beltVariable = \"brewer_\"+device+\"_belt\";\nlet result = false;\nif(msg.payload.POWER == \"ON\")\n    result = true;\n/*\n * Salviamo lo stato della cintura riscaldante in una\n * variabile con visibilità \"flow\", in modo da essere poi\n * leggibile da altri nodi nello stesso flow.\n */\nflow.set(beltVariable, result);\n\nlet statusBelt = \"OFF\";\nif(result) statusBelt = \"ON\";\n\nmsg.payload = {\n    device: device,\n    status: statusBelt \n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":690,"y":1520,"wires":[["31aa26c3.1d82ca"]]},{"id":"81abdccc.ec9048","type":"mqtt out","z":"1963aa58.852a6e","name":"Send to led","topic":"","qos":"1","retain":"true","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"b750acbb.e73dc8","x":850,"y":220,"wires":[]},{"id":"fd7af7d7.fb55","type":"switch","z":"1963aa58.852a6e","name":"Switch Brewer","property":"payload.devInstance","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"eq","v":"10","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":460,"y":320,"wires":[["d44074b4.983c7"],["ea686a64.1963c8"]]},{"id":"219e031a.1ca1a4","type":"openhab2-out2","z":"1963aa58.852a6e","name":"Temperature Brewer 2","controller":"dfa31b.5159ece8","itemname":"temperatureBewer1","topic":"ItemCommand","payload":"","onlywhenchanged":false,"x":780,"y":360,"wires":[]},{"id":"f80b0c00.8d1ea","type":"mqtt in","z":"1963aa58.852a6e","name":"Response from Brewers","topic":"resp/br/#","qos":"1","datatype":"json","broker":"b750acbb.e73dc8","nl":false,"rap":false,"rh":"1","x":100,"y":640,"wires":[["ca8db3cc.56fae"]]},{"id":"ca8db3cc.56fae","type":"function","z":"1963aa58.852a6e","name":"Alarm status Check","func":"let topic = msg.topic;\nlet array = topic.split('/');\nlet device = array[2];\nlet object = array[3];\nlet objInstance = array[4];\nlet resource = array[5];\n\nlet connectionResult = null;\nlet statusResult = null;\n\nif(object==\"3\") {\n    /*Stiamo ricevendo un responso di attivazione/disattivazione\n    da una delle due schede*/\n    if(resource==undefined) {\n        let value = msg.payload.v;\n        switch(value){\n            case 0 : \n                value = \"OFF\";\n                break;\n            case 1 : \n                value = \"ON\";\n                break;\n            default:\n                value = \"NULL\";\n                break;\n        }\n        statusResult = {\n            payload : {\n                value: value,\n                devInstance : device\n            }\n        }\n    }\n    /* Stiamo ricevendo un responso di reboot da una delle due\n    schede */\n    else if(resource==\"4\"){\n        let value = msg.payload.v;\n        if(value == \"Online\" ) {\n            let ledVariable = \"brewer_\"+device+\"_tempAlarm\";\n            flow.set(ledVariable, false);\n            connectionResult = {\n                payload : {\n                    devInstance: device,\n                    value: \"ON\"\n                }\n            };\n        }\n        else if (value==\"Offline\") {\n            connectionResult = {\n                payload : {\n                    devInstance: device,\n                    value: \"OFF\"\n                }\n            }\n        }\n    }\n} \nreturn [connectionResult, statusResult];\n","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":330,"y":640,"wires":[["7fdd714d.3f1b58","6359c448.5f3204","c650df9d.b2b208"],["cb1ec1bd.415668"]]},{"id":"d44074b4.983c7","type":"change","z":"1963aa58.852a6e","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.value","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":635,"y":300,"wires":[["6931b894.6f63"]],"l":false},{"id":"6931b894.6f63","type":"openhab2-out2","z":"1963aa58.852a6e","name":"Temperature Brewer 1","controller":"dfa31b.5159ece8","itemname":"temperatureBewer0","topic":"ItemCommand","payload":"","onlywhenchanged":false,"x":780,"y":300,"wires":[]},{"id":"ea686a64.1963c8","type":"change","z":"1963aa58.852a6e","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.value","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":635,"y":340,"wires":[["219e031a.1ca1a4"]],"l":false},{"id":"5ce9c5e5.678afc","type":"openhab2-out2","z":"1963aa58.852a6e","name":"Temp Observe 1","controller":"dfa31b.5159ece8","itemname":"TemperatureObserverBrewer0","topic":"ItemCommand","payload":"","onlywhenchanged":false,"x":920,"y":580,"wires":[]},{"id":"7fdd714d.3f1b58","type":"switch","z":"1963aa58.852a6e","name":"","property":"payload.devInstance","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"num"},{"t":"eq","v":"10","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":570,"y":640,"wires":[["71655fc7.b68498"],["7c96a9e4.2e5eb"]]},{"id":"31361c85.4d7724","type":"openhab2-out2","z":"1963aa58.852a6e","name":"Temp Observe 2","controller":"dfa31b.5159ece8","itemname":"TemperatureObserverBrewer1","topic":"ItemCommand","payload":"","onlywhenchanged":false,"x":920,"y":660,"wires":[]},{"id":"71655fc7.b68498","type":"change","z":"1963aa58.852a6e","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.value","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":715,"y":580,"wires":[["5ce9c5e5.678afc"]],"l":false},{"id":"7c96a9e4.2e5eb","type":"change","z":"1963aa58.852a6e","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.value","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":715,"y":660,"wires":[["31361c85.4d7724"]],"l":false},{"id":"6863f0c2.a0cdf8","type":"influxdb out","z":"1963aa58.852a6e","influxdb":"bcebe6c8.34832","name":"BrewIoTDB","measurement":"temperatureBrewer","precision":"s","retentionPolicy":"","database":"database","precisionV18FluxV20":"ms","retentionPolicyV18Flux":"","org":"organisation","bucket":"bucket","x":430,"y":460,"wires":[]},{"id":"2f8d9298.7b5856","type":"function","z":"1963aa58.852a6e","name":"Handle Leds Br 1","func":"let green = null;\nlet red = null;\nlet value = msg.payload.value;\n\nif(value == \"ON\") {\n    green = {\n        payload : 1\n    }\n    red = {\n        payload : 0\n    }\n    \n}\n\nelse if(value == \"OFF\") {\n     green = {\n        payload : 0\n    }\n    red = {\n        payload : 1\n    }\n}\n\nelse {\n     green = {\n        payload : 0\n    }\n    red = {\n        payload : 0\n    }\n}\n\nreturn [green, red];","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":690,"y":720,"wires":[["747c90da.8bfe8"],["17ec7ec8.c197c9"]]},{"id":"747c90da.8bfe8","type":"rpi-gpio out","z":"1963aa58.852a6e","name":"Green Led Brewer 1","pin":"11","set":true,"level":"0","freq":"","out":"out","x":1160,"y":700,"wires":[]},{"id":"17ec7ec8.c197c9","type":"rpi-gpio out","z":"1963aa58.852a6e","name":"Red Led Brewer 1","pin":"12","set":true,"level":"0","freq":"","out":"out","x":1170,"y":760,"wires":[]},{"id":"f365cf54.9e6e9","type":"rpi-gpio out","z":"1963aa58.852a6e","name":"Green Led Brewer 2","pin":"15","set":true,"level":"0","freq":"","out":"out","x":920,"y":920,"wires":[]},{"id":"246ef210.6dacfe","type":"rpi-gpio out","z":"1963aa58.852a6e","name":"Red Led Brewer 2","pin":"16","set":true,"level":"0","freq":"","out":"out","x":910,"y":980,"wires":[]},{"id":"6359c448.5f3204","type":"switch","z":"1963aa58.852a6e","name":"","property":"payload.devInstance","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"eq","v":"10","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":515,"y":820,"wires":[["2f8d9298.7b5856","3c12120.0e89eee"],["bfaabb67.079608","6f1e952c.25a0c4"]],"outputLabels":["Brewer 1","Brewer 2"],"l":false},{"id":"bfaabb67.079608","type":"function","z":"1963aa58.852a6e","name":"Handle Leds Br 2","func":"let green = null;\nlet red = null;\nlet value = msg.payload.value;\n\nif(value == \"ON\") {\n    green = {\n        payload : 1\n    }\n    red = {\n        payload : 0\n    }\n    \n}\n\nelse if(value == \"OFF\") {\n     green = {\n        payload : 0\n    }\n    red = {\n        payload : 1\n    }\n}\n\nelse {\n     green = {\n        payload : 0\n    }\n    red = {\n        payload : 0\n    }\n}\n\nreturn [green, red];","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":690,"y":960,"wires":[["f365cf54.9e6e9"],["246ef210.6dacfe"]]},{"id":"60272332.966d54","type":"function","z":"1963aa58.852a6e","name":"","func":"const topic = msg.topic;\nlet array = topic.split('/');\n\nlet device = array[1];\nlet objInstance = array[3];\nlet resource = array[4];\n\n\nlet messageLWT = null;\nlet messagePOWER = null;\n\n\nif(resource == \"LWT\") {\n    messageLWT = {\n        payload : {\n            device : device,\n            status : msg.payload\n        }\n    }\n}\n\nelse if(resource == \"RESULT\") {\n    let pld = JSON.parse(msg.payload);\n    messagePOWER = {\n        payload : {\n            device : device,\n            POWER : pld.POWER\n        }\n    }\n}\n\n\nreturn [messageLWT, messagePOWER];","outputs":2,"noerr":0,"initialize":"","finalize":"","libs":[],"x":535,"y":1380,"wires":[["ebd6d3ae.458418"],["d060c561.9d294"]],"icon":"node-red/switch.svg","l":false},{"id":"5782550a.c5c81c","type":"change","z":"1963aa58.852a6e","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.status","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":715,"y":1340,"wires":[["8f7cd7f9.cc37b"]],"l":false},{"id":"ebd6d3ae.458418","type":"switch","z":"1963aa58.852a6e","name":"","property":"payload.device","propertyType":"msg","rules":[{"t":"eq","v":"1","vt":"num"},{"t":"eq","v":"11","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":615,"y":1320,"wires":[["72a5a745.064538"],["5782550a.c5c81c"]],"l":false},{"id":"72a5a745.064538","type":"change","z":"1963aa58.852a6e","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.status","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":715,"y":1280,"wires":[["2ecd9bfb.2530ec"]],"l":false},{"id":"2ecd9bfb.2530ec","type":"openhab2-out2","z":"1963aa58.852a6e","name":"State Belt Connection Brewer 1","controller":"dfa31b.5159ece8","itemname":"stateConnectionBelt0","topic":"ItemCommand","payload":"","onlywhenchanged":false,"x":1010,"y":1280,"wires":[]},{"id":"8f7cd7f9.cc37b","type":"openhab2-out2","z":"1963aa58.852a6e","name":"State Belt Connection Brewer 2","controller":"dfa31b.5159ece8","itemname":"stateConnectionBelt10","topic":"ItemCommand","payload":"","onlywhenchanged":false,"x":1010,"y":1340,"wires":[]},{"id":"6f1e952c.25a0c4","type":"change","z":"1963aa58.852a6e","name":"","rules":[{"t":"change","p":"payload.value","pt":"msg","from":"ON","fromt":"str","to":"Online","tot":"str"},{"t":"change","p":"payload.value","pt":"msg","from":"OFF","fromt":"str","to":"Offline","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":615,"y":840,"wires":[["cf3bded8.661fa"]],"l":false},{"id":"dd98a064.bc108","type":"openhab2-out2","z":"1963aa58.852a6e","name":"State Label Brewer 2","controller":"dfa31b.5159ece8","itemname":"stateConnectionBrewer2","topic":"ItemCommand","payload":"","onlywhenchanged":false,"x":900,"y":840,"wires":[]},{"id":"3c12120.0e89eee","type":"change","z":"1963aa58.852a6e","name":"","rules":[{"t":"change","p":"payload.value","pt":"msg","from":"ON","fromt":"str","to":"Online","tot":"str"},{"t":"change","p":"payload.value","pt":"msg","from":"OFF","fromt":"str","to":"Offline","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":615,"y":780,"wires":[["e629a708.90d97"]],"l":false},{"id":"cf3bded8.661fa","type":"change","z":"1963aa58.852a6e","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.value","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":735,"y":840,"wires":[["dd98a064.bc108"]],"l":false},{"id":"e629a708.90d97","type":"change","z":"1963aa58.852a6e","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.value","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":735,"y":780,"wires":[["a9bbd0f0.515d28"]],"l":false},{"id":"a9bbd0f0.515d28","type":"openhab2-out2","z":"1963aa58.852a6e","name":"State Label Brewer 1","controller":"dfa31b.5159ece8","itemname":"stateConnectionBrewer1","topic":"ItemCommand","payload":"","onlywhenchanged":false,"x":900,"y":780,"wires":[]},{"id":"c650df9d.b2b208","type":"function","z":"1963aa58.852a6e","name":"Turn off the belt? ","func":"\nif(msg.payload.value != \"OFF\") return null;\n\nlet beltDevice = parseInt(msg.payload.devInstance)+1;\nlet beltControl={\n    topic: \"br/\"+beltDevice+\"/3306/0/cmnd/POWER\",\n    payload: \"OFF\"\n};\n\nreturn beltControl;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":670,"y":520,"wires":[["2e94aab8.4ffbbe"]]},{"id":"2e94aab8.4ffbbe","type":"mqtt out","z":"1963aa58.852a6e","name":"Send to belt","topic":"","qos":"1","retain":"false","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"b750acbb.e73dc8","x":950,"y":520,"wires":[]},{"id":"31aa26c3.1d82ca","type":"switch","z":"1963aa58.852a6e","name":"","property":"payload.device","propertyType":"msg","rules":[{"t":"eq","v":"1","vt":"num"},{"t":"eq","v":"11","vt":"num"}],"checkall":"true","repair":false,"outputs":2,"x":885,"y":1520,"wires":[["19fadf84.acead8"],["b025de13.b74a48"]],"l":false},{"id":"19fadf84.acead8","type":"change","z":"1963aa58.852a6e","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.status","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":975,"y":1480,"wires":[["3f6a0e2d.a1660a"]],"l":false},{"id":"b025de13.b74a48","type":"change","z":"1963aa58.852a6e","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.status","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":975,"y":1560,"wires":[["bcb668b.73f2198"]],"l":false},{"id":"3f6a0e2d.a1660a","type":"openhab2-out2","z":"1963aa58.852a6e","name":"Status of Belt 1","controller":"dfa31b.5159ece8","itemname":"stateLabelBeltBrewer0","topic":"ItemCommand","payload":"","onlywhenchanged":false,"x":1160,"y":1480,"wires":[]},{"id":"bcb668b.73f2198","type":"openhab2-out2","z":"1963aa58.852a6e","name":"Status of Belt 2","controller":"dfa31b.5159ece8","itemname":"stateLabelBeltBrewer10","topic":"ItemCommand","payload":"","onlywhenchanged":false,"x":1160,"y":1560,"wires":[]},{"id":"cb1ec1bd.415668","type":"switch","z":"1963aa58.852a6e","name":"","property":"payload.devInstance","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"eq","v":"10","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":455,"y":1080,"wires":[["5185b21e.998c6c"],["95f2cf26.56e12"]],"outputLabels":["Brewer 1","Brewer 2"],"l":false},{"id":"95f2cf26.56e12","type":"change","z":"1963aa58.852a6e","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.value","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":575,"y":1120,"wires":[["5c8e8885.1df5f"]],"l":false},{"id":"5185b21e.998c6c","type":"change","z":"1963aa58.852a6e","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.value","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":575,"y":1060,"wires":[["3485fec1.fc5fea"]],"l":false},{"id":"3485fec1.fc5fea","type":"openhab2-out2","z":"1963aa58.852a6e","name":"Status Brewer 1","controller":"dfa31b.5159ece8","itemname":"stateLabelBrewer0","topic":"ItemCommand","payload":"","onlywhenchanged":false,"x":1020,"y":1060,"wires":[]},{"id":"5c8e8885.1df5f","type":"openhab2-out2","z":"1963aa58.852a6e","name":"Status Brewer 2","controller":"dfa31b.5159ece8","itemname":"stateLabelBrewer10","topic":"ItemCommand","payload":"","onlywhenchanged":false,"x":1020,"y":1120,"wires":[]},{"id":"bf316091.3cde38","type":"subflow:687dc4d5.f5f3bc","z":"1963aa58.852a6e","name":"","x":440,"y":400,"wires":[]},{"id":"b750acbb.e73dc8","type":"mqtt-broker","name":"Broker","broker":"broker.hivemq.com","port":"1883","tls":"","clientid":"","usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthRetain":"false","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closeRetain":"false","closePayload":"","closeMsg":{},"willTopic":"brm/3/0/11","willQos":"1","willRetain":"true","willPayload":"2","willMsg":{},"sessionExpiry":""},{"id":"dfa31b.5159ece8","type":"openhab2-controller2","name":"Openhab","protocol":"http","host":"192.168.1.165","port":"8080","path":"","username":"","password":"","ohversion":"v3","token":""},{"id":"bcebe6c8.34832","type":"influxdb","hostname":"127.0.0.1","port":"8086","protocol":"http","database":"BrewIoT","name":"BrewIoT","usetls":false,"tls":"","influxdbVersion":"1.x","url":"http://localhost:8086","rejectUnauthorized":true}]
