[{"id":"84d1cf0f.8dfe5","type":"tab","label":"Control Panel","disabled":false,"info":""},{"id":"62508532.67c21c","type":"tab","label":"Brewer MGMT","disabled":false,"info":""},{"id":"8de2e136.371e5","type":"tab","label":"Stocker MGMT","disabled":false,"info":""},{"id":"e729a332.50197","type":"tab","label":"Recipy MGMT","disabled":false,"info":""},{"id":"9ab4edc6.7c99f","type":"serial-port","serialport":"/dev/ttyUSB0","serialbaud":"115200","databits":"8","parity":"none","stopbits":"1","waitfor":"","dtr":"none","rts":"none","cts":"none","dsr":"none","newline":"\\n","bin":"false","out":"char","addchar":"","responsetimeout":"10000"},{"id":"8866ebf.9fd2b18","type":"mqtt-broker","name":"","broker":"broker.hivemq.com","port":"1883","clientid":"","usetls":false,"compatmode":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"eb70a2db.e5dff8","type":"ui_group","name":"Room 1","tab":"3aed93c1.a8e7ec","order":1,"disp":true,"width":24,"collapse":false},{"id":"fabfe973.03c8c8","type":"ui_group","name":"Sensor 2","tab":"3d7d59e1.c8a1b6","order":5,"disp":true,"width":"24","collapse":false},{"id":"add7fae1.4829e8","type":"amqp-server","host":"localhost","port":"5672","vhost":"","keepalive":"30","usetls":false,"verifyservercert":true,"useca":false,"ca":"","usetopology":false,"topology":"{\n\t\"exchanges\": [\n\t\t{\"name\": \"exchange1\", \"type\": \"direct\", \"options\": {\"durable\": false}},\n\t\t{\"name\": \"exchange2\"}\n\t],\n\t\"queues\": [\n\t\t{\"name\": \"queue1\", \"options\": {\"messageTtl\": 60000}},\n\t\t{\"name\": \"queue2\"}\n\t],\n\t\"bindings\": [\n\t\t{\"source\": \"exchange1\", \"queue\": \"queue1\", \"pattern\": \"debug\", \"args\": {}},\n\t\t{\"source\": \"exchange1\", \"exchange\": \"exchange2\", \"pattern\": \"error\"},\n\t\t{\"source\": \"exchange2\", \"queue\": \"queue2\"}\n\t]\n}","prefetch":false,"prefetchvalue":"1","prefetchack":false,"prefetchvalueack":"10"},{"id":"64ca876e.d398d","type":"ui_group","name":"Temperature1","tab":"3d7d59e1.c8a1b6","order":3,"disp":true,"width":"8","collapse":false},{"id":"fdb48cc9.da934","type":"ui_group","name":"Battery1","tab":"3d7d59e1.c8a1b6","order":2,"disp":true,"width":"8","collapse":false},{"id":"660c9234.76adf4","type":"ui_group","name":"Humidity1","tab":"3d7d59e1.c8a1b6","order":4,"disp":true,"width":"8","collapse":false},{"id":"1d57995e.6e59f7","type":"ui_group","name":"Battery2","tab":"3d7d59e1.c8a1b6","order":6,"disp":true,"width":"8","collapse":false},{"id":"5ee1d637.ebe958","type":"ui_group","name":"Humidity2","tab":"3d7d59e1.c8a1b6","order":8,"disp":true,"width":"8","collapse":false},{"id":"b12e57cd.073348","type":"ui_group","name":"Temperature2","tab":"3d7d59e1.c8a1b6","order":7,"disp":true,"width":"8","collapse":false},{"id":"3d7d59e1.c8a1b6","type":"ui_tab","name":"Project","icon":"dashboard","order":1,"disabled":true,"hidden":true},{"id":"f6329b2.5726a68","type":"ui_base","theme":{"name":"theme-dark","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#09906a","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"},"themeState":{"base-color":{"default":"#097479","value":"#09906a","edited":true},"page-titlebar-backgroundColor":{"value":"#09906a","edited":false},"page-backgroundColor":{"value":"#111111","edited":false},"page-sidebar-backgroundColor":{"value":"#ffffff","edited":false},"group-textColor":{"value":"#0ed89f","edited":false},"group-borderColor":{"value":"#555555","edited":false},"group-backgroundColor":{"value":"#333333","edited":false},"widget-textColor":{"value":"#eeeeee","edited":false},"widget-backgroundColor":{"value":"#09906a","edited":false},"widget-borderColor":{"value":"#333333","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}},"angularTheme":{"primary":"indigo","accents":"blue","warn":"red","background":"grey"}},"site":{"name":"Node-RED Dashboard","hideToolbar":"false","allowSwipe":"false","lockMenu":"false","allowTempTheme":"true","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"3aed93c1.a8e7ec","type":"ui_tab","name":"Fabrizio Project","icon":"dashboard","disabled":false,"hidden":false},{"id":"ea134a41.ff0398","type":"ui_group","name":"Room 2","tab":"3aed93c1.a8e7ec","order":2,"disp":true,"width":24,"collapse":false},{"id":"b750acbb.e73dc8","type":"mqtt-broker","name":"Broker","broker":"broker.hivemq.com","port":"1883","clientid":"","usetls":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthRetain":"false","birthPayload":"","closeTopic":"","closeQos":"0","closeRetain":"false","closePayload":"","willTopic":"","willQos":"0","willRetain":"false","willPayload":""},{"id":"48a71f8e.17455","type":"mqtt out","z":"84d1cf0f.8dfe5","name":"Temp Observe","topic":"cmd/br/0/3303/0/5700/observe","qos":"1","retain":"false","broker":"8866ebf.9fd2b18","x":260,"y":220,"wires":[]},{"id":"b4e742c8.d4a56","type":"inject","z":"84d1cf0f.8dfe5","name":"On","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"v\":\"ON\"}","payloadType":"json","x":90,"y":200,"wires":[["48a71f8e.17455"]]},{"id":"eb512005.4ca1","type":"inject","z":"84d1cf0f.8dfe5","name":"Off","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"v\":\"OFF\"}","payloadType":"json","x":90,"y":240,"wires":[["48a71f8e.17455"]]},{"id":"df5c6aad.d9b358","type":"mqtt in","z":"84d1cf0f.8dfe5","name":"Read responses","topic":"resp/brewIoT/br/0/#","qos":"0","datatype":"json","broker":"8866ebf.9fd2b18","x":160,"y":500,"wires":[["2a9f4d65.f7c6f2"]]},{"id":"2a9f4d65.f7c6f2","type":"debug","z":"84d1cf0f.8dfe5","d":true,"name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":370,"y":500,"wires":[]},{"id":"28106573.f5dfea","type":"mqtt out","z":"84d1cf0f.8dfe5","name":"Hum Observe","topic":"cmd/st/0/3304/0/5700/observe","qos":"1","retain":"false","broker":"8866ebf.9fd2b18","x":260,"y":320,"wires":[]},{"id":"77e15018.8556","type":"inject","z":"84d1cf0f.8dfe5","name":"On","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"v\":\"ON\"}","payloadType":"json","x":90,"y":300,"wires":[["28106573.f5dfea"]]},{"id":"ecfff366.30d3d","type":"inject","z":"84d1cf0f.8dfe5","name":"Off","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"v\":\"OFF\"}","payloadType":"json","x":90,"y":340,"wires":[["28106573.f5dfea"]]},{"id":"3b12e912.738d26","type":"mqtt out","z":"84d1cf0f.8dfe5","name":"Fire Observe","topic":"cmd/brewIoT/st/0/503/0/5700/observe","qos":"1","retain":"false","broker":"8866ebf.9fd2b18","x":250,"y":420,"wires":[]},{"id":"7fe15838.134008","type":"inject","z":"84d1cf0f.8dfe5","name":"On","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"v\":\"ON\"}","payloadType":"json","x":90,"y":400,"wires":[["3b12e912.738d26"]]},{"id":"391c68fc.a6db08","type":"inject","z":"84d1cf0f.8dfe5","name":"Off","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"v\":\"OFF\"}","payloadType":"json","x":90,"y":440,"wires":[["3b12e912.738d26"]]},{"id":"c01a8d.7952457","type":"mqtt out","z":"84d1cf0f.8dfe5","name":"Light Observe","topic":"cmd/st/0/3301/0/5700/observe","qos":"1","retain":"false","broker":"8866ebf.9fd2b18","x":260,"y":120,"wires":[]},{"id":"ac0ab92c.01a4a8","type":"inject","z":"84d1cf0f.8dfe5","name":"On","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"v\":\"ON\"}","payloadType":"json","x":90,"y":100,"wires":[["c01a8d.7952457"]]},{"id":"be208626.16c708","type":"inject","z":"84d1cf0f.8dfe5","name":"Off","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{\"v\":\"OFF\"}","payloadType":"json","x":90,"y":140,"wires":[["c01a8d.7952457"]]},{"id":"9ff15323.50035","type":"inject","z":"84d1cf0f.8dfe5","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":415,"y":120,"wires":[["dd6d9a08.9afed8"]],"l":false},{"id":"d672ec32.fb5fc","type":"inject","z":"84d1cf0f.8dfe5","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":415,"y":220,"wires":[["dde4b714.bccd88"]],"l":false},{"id":"34492366.6d32cc","type":"inject","z":"84d1cf0f.8dfe5","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":415,"y":320,"wires":[["a8e84f51.19dc2"]],"l":false},{"id":"53959f64.08aca","type":"inject","z":"84d1cf0f.8dfe5","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":415,"y":420,"wires":[["793b0a18.f656d4"]],"l":false},{"id":"dd6d9a08.9afed8","type":"mqtt out","z":"84d1cf0f.8dfe5","name":"Request Light","topic":"cmd/st/0/3301/0/5700","qos":"0","retain":"false","broker":"8866ebf.9fd2b18","x":540,"y":120,"wires":[]},{"id":"dde4b714.bccd88","type":"mqtt out","z":"84d1cf0f.8dfe5","name":"Request Temp","topic":"cmd/br/0/3303/0/5700","qos":"0","retain":"false","broker":"8866ebf.9fd2b18","x":540,"y":220,"wires":[]},{"id":"a8e84f51.19dc2","type":"mqtt out","z":"84d1cf0f.8dfe5","name":"Request Hum","topic":"cmd/st/0/3304/0/5700","qos":"0","retain":"false","broker":"8866ebf.9fd2b18","x":540,"y":320,"wires":[]},{"id":"793b0a18.f656d4","type":"mqtt out","z":"84d1cf0f.8dfe5","name":"Request Fire","topic":"cmd/st/0/503/0/5700","qos":"0","retain":"false","broker":"8866ebf.9fd2b18","x":530,"y":420,"wires":[]},{"id":"fe21d6d3.1f4d18","type":"mqtt in","z":"62508532.67c21c","name":"Data from Brewer","topic":"data/br/+/+/+/5700","qos":"1","datatype":"json","broker":"b750acbb.e73dc8","x":120,"y":360,"wires":[["f1a3a051.998e"]]},{"id":"f1a3a051.998e","type":"function","z":"62508532.67c21c","name":"","func":"const topic = msg.topic;\nlet array = topic.split('/');\n\nlet device = array[2];\nlet sensor = array[3];\nlet object = array[4];\n\n/* Valutare se togliere il sensorType dall'insieme di\n * valori che vengono inoltrati nei nodi successivi\n */\nlet value1 = {\n            payload: {\n                value: msg.payload.v,\n                devInstance : device,\n                sensorType  : sensor\n            }\n}\nlet value2 = {\n            payload: {\n                timestamp: msg.payload.tstamp,\n                value: msg.payload.v,\n                devInstance: device,\n                sensorType:  sensor,\n                objInstance: object\n            }\n};\n\nreturn [value1, value2];\n","outputs":2,"noerr":0,"initialize":"","finalize":"","x":255,"y":360,"wires":[["3f5e260d.416faa","7056324b.5ac38c"],["9dba5a5c.8f3168"]],"outputLabels":["temperature","payload"],"icon":"node-red/switch.svg","l":false},{"id":"9dba5a5c.8f3168","type":"debug","z":"62508532.67c21c","d":true,"name":"InfluenzDB","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":440,"wires":[]},{"id":"c754b8c2.0a4df8","type":"comment","z":"62508532.67c21c","name":"DownFlow","info":"Il flow sottostante serve a caricare i file dentro il DB InfluxDB","x":240,"y":400,"wires":[]},{"id":"b253e611.979998","type":"comment","z":"62508532.67c21c","name":"UpFlow","info":"Il flow in alto serve a gestire le soglie della sensore e, inoltre, ad inviare il valore su OpenHab","x":250,"y":320,"wires":[]},{"id":"3f5e260d.416faa","type":"function","z":"62508532.67c21c","name":"Temperature Thresholds check","func":"// Qui riprendiamo i valori dal nodo precedente.\nlet device = msg.payload.devInstance;\nlet sensor = msg.payload.sensorType;\nlet value = msg.payload.value;\n\n\n/* Qui andiamo a recuperare le soglie stabilite per il\n * nostro sensore\n */\nlet minValue = global.get(\"brewer_\"+device+\"_minTemp\");\nlet maxValue = global.get(\"brewer_\"+device+\"_maxTemp\");\n\nif(minValue === undefined){\n    minValue = 16;\n}\nif(maxValue === undefined){\n    maxValue = 26;\n}\nlet avg = (minValue + maxValue)/2;\n\n\n/* Recuperiamo i valori della cintura riscaldante e creiamo\n * il msg per il controllo della stessa. L'ID del WiFi relay\n * correlato alla scheda ESP è uguale all'ID della scheda \n * ESP + 1.\n */\nlet beltDevice = device+1;\nlet beltVariable = \"brewer_\"+beltDevice+\"_belt\";\nlet beltStatus = flow.get(beltVariable);\nif(beltStatus === undefined){\n    beltStatus = false;\n    flow.set(beltVariable, beltStatus);\n}\nlet beltControl={\n    topic: \"cmd/br/\"+beltDevice+\"/3306/0/5850\",\n    payload: \"\"\n};\n\n\n/* Qui invece gestiamo i valori del led d'allarme */\nlet ledVariable = \"brewer_\"+device+\"_tempAlarm\";\nlet ledStatus = flow.get(ledVariable);\nif(ledStatus === undefined){\n    ledStatus = false;\n    flow.set(ledVariable, ledStatus);\n}\nlet ledControl={\n    topic: \"cmd/br/\"+device+\"/3311/0/5850\",\n    payload: \"\"\n};\n\nif(value<minValue){\n    /* Abbiamo rilevato una temperatura che è minore di\n     * quella minima accettabile, quindi dobbiamo far partire\n     * la cintura riscaldante (a meno che non sia già partita)\n     */\n    if(!beltStatus){\n        beltControl.payload = {\n            value: \"ON\"\n        };\n    }\n    else{\n        // La cintura è già attiva.\n        beltControl = null;\n    }\n    if(!ledStatus){\n        ledControl.payload = {\n            v: \"ON\"\n        };\n        flow.set(\"brewer_\"+device+\"_tempAlarm\",true);\n    }\n    \n}\nelse if(value>maxValue){\n    /* La cisterna è troppo calda. Dobbiamo far \n     * partire l'allarme\n     */\n    beltControl = null;\n    if(!ledStatus){\n        // L'allarme non è attivo\n        ledControl.payload = {\n            v: \"ON\"\n        };\n        flow.set(\"brewer_\"+device+\"_tempAlarm\",true);\n    }\n}\nelse if(value>=minValue && value < maxValue){\n    /* Se siamo qui, la temperatura é a posto. */\n    if(value>=avg){\n        /* La temperatura ha superato la media di valori \n         * ammessi. Se c'era una cintura accesa in precedenza\n         * ora è il momento di spegnerla\n         */\n        if(beltStatus){\n            beltControl.payload = {\n                value: \"OFF\"\n            };\n        }\n        else beltControl = null;\n    }\n    if(ledStatus){\n        /* Se c'era un allarme attivo, ora è il momento di\n           spegnerlo */\n        ledControl.payload = {\n            v: \"OFF\",\n        };\n    }\n}\n\nreturn [beltControl,ledControl];","outputs":2,"noerr":0,"initialize":"","finalize":"","x":530,"y":240,"wires":[["3e282e9b.592db2"],["bdcb0eb6.0754"]],"outputLabels":["BELT_CONTROL","LED_CONTROL"]},{"id":"1fc7c051.16d4f","type":"function","z":"e729a332.50197","name":"Recipy Configuration","func":"// Qui dentro scriveremo i vari dati delle ricette.\n\nglobal.set(\"\");\nreturn msg;","outputs":1,"noerr":0,"initialize":"// Il codice qui dentro viene fatto partire automaticamente,\n// ogni volta che ","finalize":"","x":400,"y":140,"wires":[[]]},{"id":"7056324b.5ac38c","type":"debug","z":"62508532.67c21c","d":true,"name":"OpornHAB","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":340,"wires":[]},{"id":"3e282e9b.592db2","type":"mqtt out","z":"62508532.67c21c","name":"Send to belt","topic":"","qos":"2","retain":"false","broker":"b750acbb.e73dc8","x":790,"y":200,"wires":[]},{"id":"3d940d94.63a1f2","type":"mqtt in","z":"62508532.67c21c","name":"Response from Sonoff","topic":"resp/br/+/3306/+/5850","qos":"1","datatype":"json","broker":"b750acbb.e73dc8","x":240,"y":140,"wires":[["b0b02296.36c36"]]},{"id":"b0b02296.36c36","type":"function","z":"62508532.67c21c","name":"Update belt status","func":"const topic = msg.topic;\nlet array = topic.split('/');\n\nlet device = array[2];\n\nlet beltVariable = \"brewer_\"+device+\"_belt\";\nlet result = false;\nif(msg.payload.v == \"ON\")\n    result = true;\n/*\n * Salviamo lo stato della cintura riscaldante in una\n * variabile con visibilità \"flow\", in modo da essere poi\n * leggibile da altri nodi nello stesso flow.\n */\nflow.set(beltVariable, result);","outputs":0,"noerr":0,"initialize":"","finalize":"","x":490,"y":140,"wires":[]},{"id":"d9670cf.aa69af","type":"mqtt in","z":"8de2e136.371e5","name":"Data from Stocker","topic":"data/st/+/+/+/5700","qos":"1","datatype":"json","broker":"b750acbb.e73dc8","x":170,"y":320,"wires":[["82819410.ed06a8"]]},{"id":"82819410.ed06a8","type":"function","z":"8de2e136.371e5","name":"MUX","func":"const topic = msg.topic;\nlet array = topic.split('/');\n\nlet device = array[2];\nlet sensor = array[3];\nlet object = array[4];\n\nlet tempVal=null, humVal=null, lightVal=null, fireVal= null;\n\nswitch(sensor){\n    case \"503\": \n        fireVal = {\n            payload: {\n                value: msg.payload.v,\n                dev: device,\n                timestamp: msg.payload.tstamp,\n                objInstance: object\n            }\n        }; break;\n    case \"3301\": \n        lightVal = {\n            payload: {\n                value: msg.payload.v,\n                dev: device,\n                timestamp: msg.payload.tstamp,\n                objInstance: object\n            }\n        };break;\n    case \"3303\":\n        tempVal = {\n            payload: {\n                value: msg.payload.v,\n                dev: device,\n                timestamp: msg.payload.tstamp,\n                objInstance: object\n            }\n        };break;\n    case \"3304\": \n        humVal = {\n            payload: {\n                value: msg.payload.v,\n                dev: device,\n                timestamp: msg.payload.tstamp,\n                objInstance: object\n            }\n        };break;\n    default: break;\n}\n\nreturn [tempVal, humVal, lightVal, fireVal];\n","outputs":4,"noerr":0,"initialize":"","finalize":"","x":350,"y":320,"wires":[["a918f32.e8b731"],["90e6086f.d30fd8"],["561102d7.0c633c"],["8fb2bc92.fbf7c"]],"outputLabels":["Temperature","Humidity","Light","Fire"],"icon":"node-red/switch.svg"},{"id":"72dee82d.7a8b08","type":"comment","z":"84d1cf0f.8dfe5","name":"Stocker","info":"","x":170,"y":40,"wires":[]},{"id":"a918f32.e8b731","type":"function","z":"8de2e136.371e5","name":"Handle Temperature","func":"let value=msg.payload.value;\nlet dev = msg.payload.dev;\nlet obj = msg.payload.objInstance;\nlet timestamp = msg.payload.timestamp;\n\n//Qui recuperiamo il precedente valore d'allarme\nconst tempAlarm=\"stocker_\"+dev+\"_temp_\"+obj;\nlet alarm = flow.get(tempAlarm);\n\n//Questa è la soglia definita nel Recipy MGMT\nlet maxTemp=global.get(\"stocker_max_temp\");\nlet minTemp=global.get(\"stocker_min_temp\");\n/* se non c'è alcuna customizzazione sulla soglia di\n     * umidità, allora impostiamo il valore di default.\n     */\nif(maxTemp === undefined){\n    maxTemp = 26;\n}\nif(minTemp === undefined){\n    minTemp = 4;\n}\n/* Questo if viene eseguito solo la prima volta, per\n * inizializzare la variable */\nif(alarm === undefined){\n    alarm = false;\n    flow.set(tempAlarm, false);\n}\n\nlet mqttMessage = {\n    topic: \"cmd/st/\"+dev+\"/3311/0/5850\",\n    payload: \"\"\n};\n\nif(((value < maxTemp) && (value > minTemp)) && alarm){\n    // temperatura a posto, ma c'è un allarme attivo\n    mqttMessage.payload = {\"v\":\"OFF\"};\n    flow.set(tempAlarm, false);\n}\nelse if((value >= maxTemp) && !alarm){\n    // alta temperatura rilevata, ma nessun allarme attivo\n    mqttMessage.payload = {\"v\":\"ON\"};\n    flow.set(tempAlarm, true);\n}\nelse if((value <= minTemp) && !alarm){\n    // bassa temperatura rilevata, ma nessun allarme attivo\n    mqttMessage.payload = {\"v\":\"ON\"};\n    flow.set(tempAlarm, true);\n}\nelse{\n    // In questo caso non dobbiamo fare nula\n    mqttMessage = null;\n}\n\nreturn [msg, mqttMessage];","outputs":2,"noerr":0,"initialize":"","finalize":"","x":720,"y":160,"wires":[["77b4227a.8659cc"],["9fd44641.594a68"]]},{"id":"90e6086f.d30fd8","type":"function","z":"8de2e136.371e5","name":"Handle Humidity","func":"let value=msg.payload.value;\nlet dev = msg.payload.dev;\nlet obj = msg.payload.objInstance;\nlet timestamp = msg.payload.timestamp;\n\n//Qui recuperiamo il precedente valore d'allarme\nconst humidityAlarm=\"stocker_\"+dev+\"_humidity_\"+obj;\nlet alarm = flow.get(humidityAlarm);\n\n//Questa è la soglia definita nel Recipy MGMT\nlet maxHumidity=global.get(\"stocker_max_humidity\");\nif(maxHumidity === undefined){\n    /* se non c'è alcuna customizzazione sulla soglia di\n     * umidità, allora impostiamo il valore di default.\n     */\n    maxHumidity = 50;\n}\n/* Questo if viene eseguito solo la prima volta, per\n * inizializzare la variable */\nif(alarm === undefined){\n    alarm = false;\n    flow.set(humidityAlarm, false);\n}\nlet mqttMessage = {\n    topic: \"cmd/st/\"+dev+\"/3311/1/5850\",\n    payload: \"\"\n};\n\nif((value < maxHumidity) && alarm){\n    // umidità posto, ma c'è un allarme attivo\n    mqttMessage.payload = {\"v\":\"OFF\"};\n    flow.set(humidityAlarm, false);\n}\nelse if((value >= maxHumidity) && !alarm){\n    // alta umidità rilevata, ma nessun allarme attivo\n    mqttMessage.payload = {\"v\":\"ON\"};\n    flow.set(humidityAlarm, true);\n}\nelse{\n    // In questo caso non dobbiamo fare nula\n    mqttMessage = null;\n}\n\nreturn [msg, mqttMessage];","outputs":2,"noerr":0,"initialize":"","finalize":"","x":640,"y":300,"wires":[["480c274b.05c308"],["46907779.71fc48"]]},{"id":"561102d7.0c633c","type":"function","z":"8de2e136.371e5","name":"Handle Light","func":"let value=msg.payload.value;\nlet dev = msg.payload.dev;\nlet obj = msg.payload.objInstance;\nlet timestamp = msg.payload.timestamp;\n\n//Qui recuperiamo il precedente valore d'allarme\nconst lightAlarm=\"stocker_\"+dev+\"_light_\"+obj;\nlet alarm = flow.get(lightAlarm);\n\n//Questa è la soglia definita nel Recipy MGMT\nlet maxLight=global.get(\"stocker_max_light\");\nif(maxLight === undefined){\n    /* se non c'è alcuna customizzazione sulla soglia di luce\n     * allora impostiamo il valore di default.\n     */\n    maxLight = 50;\n}\n/* Questo if viene eseguito solo la prima volta, per\n * inizializzare la variable */\nif(alarm === undefined){\n    alarm = false;\n    flow.set(lightAlarm, false);\n}\nlet mqttMessage = {\n    topic: \"cmd/st/\"+dev+\"/3311/2/5850\",\n    payload: \"\"\n};\n\nif((value < maxLight) && alarm){\n    // la luce è a posto, ma c'è un allarme attivo\n    mqttMessage.payload = {\"v\":\"OFF\"};\n    flow.set(lightAlarm, false);\n}\nelse if((value >= maxLight)&& !alarm){\n    // luce intensa rilevata, ma nessun allarme attivo\n    mqttMessage.payload = {\"v\":\"ON\"};\n    flow.set(lightAlarm, true);\n}\nelse{\n    // In questo caso non dobbiamo fare nula\n    mqttMessage = null;\n}\n\nreturn [msg, mqttMessage];","outputs":2,"noerr":0,"initialize":"","finalize":"","x":570,"y":440,"wires":[["9291202d.1c2ae"],["7e881bbb.289194"]]},{"id":"8fb2bc92.fbf7c","type":"function","z":"8de2e136.371e5","name":"Handle Fire","func":"let result=true;\nlet dev = msg.payload.dev;\nlet obj = msg.payload.objInstance;\nlet fireAlarm=\"stocker_\"+dev+\"_fire_\"+obj;\nlet alarm = flow.get(fireAlarm);\n\n\n/* Questo if viene eseguito solo la prima volta, per\n * inizializzare la variable */\nif(alarm === undefined){\n    alarm = false;\n    flow.set(fireAlarm, false);\n}\n\nif(msg.payload.value == 1){\n    // non è stata rilevata alcuna fiamma.\n    result= false;\n    //flow.set(fireVariable, false);\n}\n\nmsg.payload = {\n    result: result,\n    dev: dev,\n    obj: obj,\n    timestamp : msg.payload.timestamp\n};\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":510,"y":580,"wires":[["fa93f5d4.d8a358","c48048f3.926d68","4fd4b199.e0a49"]]},{"id":"fa93f5d4.d8a358","type":"function","z":"8de2e136.371e5","name":"Fire Alarm Control","func":"let dev=msg.payload.dev;\nlet obj=msg.payload.obj;\n\nconst fireVariable= \"stocker_\"+dev+\"_fire_\"+obj;\nlet alarm = flow.get(fireVariable);\n\n// Qui creiamo il topic\nmsg.topic=\"cmd/st/\"+dev+\"/3311/3/5850\";\n\n\n/* Ora andiamo a verificare se l'allarme va acceso o spento,\n * in base al risultato del sensore e alla variable flow salvata\n * in precedenza. Se entrambi i valori sono negativi, allora l'\n * allarme è spento e rimane spento, quindi non facciamo nulla.\n * Se entrambi i valori sono positivi, allora l'allarme è attivo\n * e rimane attivo, quindi non facciamo nulla. Se i due valori\n * sono contrastanti, allora l'allarme va acceso oppure spento\n */\nlet result=msg.payload.result;\n\nif(result && !alarm){\n    // Fuoco rilevato, ma allarme spento\n    flow.set(fireVariable, true);\n    msg.payload={\"v\":\"ON\"};\n}\nelse if(!result && alarm){\n    // Fuoco non rilevato, ma allarme attivo\n    flow.set(fireVariable, false);\n    msg.payload={\"v\":\"OFF\"};\n}\nelse{\n    //Altrimenti non mandiamo nulla.\n    msg = null;\n}\n\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","x":750,"y":700,"wires":[["b867d4ae.bfe698"]]},{"id":"c48048f3.926d68","type":"debug","z":"8de2e136.371e5","d":true,"name":"InfluxDB","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":760,"y":580,"wires":[]},{"id":"b867d4ae.bfe698","type":"mqtt out","z":"8de2e136.371e5","name":"Send Fire Alarm","topic":"","qos":"1","retain":"false","broker":"b750acbb.e73dc8","x":960,"y":700,"wires":[]},{"id":"4fd4b199.e0a49","type":"change","z":"8de2e136.371e5","name":"OpenHab format","rules":[{"t":"change","p":"payload.result","pt":"msg","from":"true","fromt":"bool","to":"true","tot":"str"},{"t":"change","p":"payload.result","pt":"msg","from":"false","fromt":"bool","to":"false","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":770,"y":640,"wires":[["657cd0d0.8d1a7"]]},{"id":"657cd0d0.8d1a7","type":"debug","z":"8de2e136.371e5","d":true,"name":"OpenHAB","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":960,"y":640,"wires":[]},{"id":"7e881bbb.289194","type":"mqtt out","z":"8de2e136.371e5","name":"Send Light Alarm","topic":"","qos":"1","retain":"false","broker":"b750acbb.e73dc8","x":830,"y":500,"wires":[]},{"id":"9291202d.1c2ae","type":"debug","z":"8de2e136.371e5","d":true,"name":"InfluxDB + OpenHAB","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":860,"y":440,"wires":[]},{"id":"46907779.71fc48","type":"mqtt out","z":"8de2e136.371e5","name":"Send Humidity Alarm","topic":"","qos":"1","retain":"false","broker":"b750acbb.e73dc8","x":900,"y":360,"wires":[]},{"id":"480c274b.05c308","type":"debug","z":"8de2e136.371e5","d":true,"name":"InfluxDB + OpenHAB","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":920,"y":300,"wires":[]},{"id":"9fd44641.594a68","type":"mqtt out","z":"8de2e136.371e5","name":"Send Temperature Alarm","topic":"","qos":"1","retain":"false","broker":"b750acbb.e73dc8","x":970,"y":220,"wires":[]},{"id":"77b4227a.8659cc","type":"debug","z":"8de2e136.371e5","d":true,"name":"InfluxDB + OpenHAB","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":980,"y":160,"wires":[]},{"id":"bdcb0eb6.0754","type":"mqtt out","z":"62508532.67c21c","name":"Send to led","topic":"","qos":"2","retain":"false","broker":"b750acbb.e73dc8","x":790,"y":280,"wires":[]}]
